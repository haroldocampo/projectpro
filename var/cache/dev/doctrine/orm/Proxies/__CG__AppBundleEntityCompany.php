<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Company extends \AppBundle\Entity\Company implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'name', 'subscriptionId', 'dateTimeCreated', 'employees', 'projects', 'archivedCustomerJobs', 'reminderJobs', 'paymentTypes', 'disabledExpenseTypes', 'importedTransactions', 'billingPortalLink', 'qbIntegrated'];
        }

        return ['__isInitialized__', 'id', 'name', 'subscriptionId', 'dateTimeCreated', 'employees', 'projects', 'archivedCustomerJobs', 'reminderJobs', 'paymentTypes', 'disabledExpenseTypes', 'importedTransactions', 'billingPortalLink', 'qbIntegrated'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Company $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function updatedTimestamps()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'updatedTimestamps', []);

        return parent::updatedTimestamps();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateTimeCreated($dateTimeCreated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateTimeCreated', [$dateTimeCreated]);

        return parent::setDateTimeCreated($dateTimeCreated);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateTimeCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateTimeCreated', []);

        return parent::getDateTimeCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function addEmployee(\AppBundle\Entity\Employee $employee)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addEmployee', [$employee]);

        return parent::addEmployee($employee);
    }

    /**
     * {@inheritDoc}
     */
    public function removeEmployee(\AppBundle\Entity\Employee $employee)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeEmployee', [$employee]);

        return parent::removeEmployee($employee);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmployees()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmployees', []);

        return parent::getEmployees();
    }

    /**
     * {@inheritDoc}
     */
    public function addProject(\AppBundle\Entity\Project $project)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProject', [$project]);

        return parent::addProject($project);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProject(\AppBundle\Entity\Project $project)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProject', [$project]);

        return parent::removeProject($project);
    }

    /**
     * {@inheritDoc}
     */
    public function getProjects()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProjects', []);

        return parent::getProjects();
    }

    /**
     * {@inheritDoc}
     */
    public function addReminderJob(\AppBundle\Entity\ReminderJob $reminderJob)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addReminderJob', [$reminderJob]);

        return parent::addReminderJob($reminderJob);
    }

    /**
     * {@inheritDoc}
     */
    public function removeReminderJob(\AppBundle\Entity\ReminderJob $reminderJob)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeReminderJob', [$reminderJob]);

        return parent::removeReminderJob($reminderJob);
    }

    /**
     * {@inheritDoc}
     */
    public function getReminderJob()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReminderJob', []);

        return parent::getReminderJob();
    }

    /**
     * {@inheritDoc}
     */
    public function getReminderJobs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReminderJobs', []);

        return parent::getReminderJobs();
    }

    /**
     * {@inheritDoc}
     */
    public function addDisabledExpenseType(\AppBundle\Entity\DisabledExpenseType $disabledExpenseType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDisabledExpenseType', [$disabledExpenseType]);

        return parent::addDisabledExpenseType($disabledExpenseType);
    }

    /**
     * {@inheritDoc}
     */
    public function removeDisabledExpenseType(\AppBundle\Entity\DisabledExpenseType $disabledExpenseType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeDisabledExpenseType', [$disabledExpenseType]);

        return parent::removeDisabledExpenseType($disabledExpenseType);
    }

    /**
     * {@inheritDoc}
     */
    public function getDisabledExpenseTypes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDisabledExpenseTypes', []);

        return parent::getDisabledExpenseTypes();
    }

    /**
     * {@inheritDoc}
     */
    public function addPaymentType(\AppBundle\Entity\PaymentType $paymentType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPaymentType', [$paymentType]);

        return parent::addPaymentType($paymentType);
    }

    /**
     * {@inheritDoc}
     */
    public function removePaymentType(\AppBundle\Entity\PaymentType $paymentType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePaymentType', [$paymentType]);

        return parent::removePaymentType($paymentType);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentTypes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentTypes', []);

        return parent::getPaymentTypes();
    }

    /**
     * {@inheritDoc}
     */
    public function getActivePaymentTypes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActivePaymentTypes', []);

        return parent::getActivePaymentTypes();
    }

    /**
     * {@inheritDoc}
     */
    public function addImportedTransaction(\AppBundle\Entity\ImportedTransaction $importedTransaction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addImportedTransaction', [$importedTransaction]);

        return parent::addImportedTransaction($importedTransaction);
    }

    /**
     * {@inheritDoc}
     */
    public function removeImportedTransaction(\AppBundle\Entity\ImportedTransaction $importedTransaction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeImportedTransaction', [$importedTransaction]);

        return parent::removeImportedTransaction($importedTransaction);
    }

    /**
     * {@inheritDoc}
     */
    public function getImportedTransactions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImportedTransactions', []);

        return parent::getImportedTransactions();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubscriptionId($subscriptionId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubscriptionId', [$subscriptionId]);

        return parent::setSubscriptionId($subscriptionId);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubscriptionId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubscriptionId', []);

        return parent::getSubscriptionId();
    }

    /**
     * {@inheritDoc}
     */
    public function getBillingPortalLink()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBillingPortalLink', []);

        return parent::getBillingPortalLink();
    }

    /**
     * {@inheritDoc}
     */
    public function setBillingPortalLink($billingPortalLink)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBillingPortalLink', [$billingPortalLink]);

        return parent::setBillingPortalLink($billingPortalLink);
    }

    /**
     * {@inheritDoc}
     */
    public function setQbIntegrated($qbIntegrated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQbIntegrated', [$qbIntegrated]);

        return parent::setQbIntegrated($qbIntegrated);
    }

    /**
     * {@inheritDoc}
     */
    public function isQbIntegrated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isQbIntegrated', []);

        return parent::isQbIntegrated();
    }

    /**
     * {@inheritDoc}
     */
    public function getQbIntegrated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQbIntegrated', []);

        return parent::getQbIntegrated();
    }

    /**
     * {@inheritDoc}
     */
    public function addArchivedCustomerJob(\AppBundle\Entity\ArchivedCustomerJob $archivedCustomerJob)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addArchivedCustomerJob', [$archivedCustomerJob]);

        return parent::addArchivedCustomerJob($archivedCustomerJob);
    }

    /**
     * {@inheritDoc}
     */
    public function removeArchivedCustomerJob(\AppBundle\Entity\ArchivedCustomerJob $archivedCustomerJob)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeArchivedCustomerJob', [$archivedCustomerJob]);

        return parent::removeArchivedCustomerJob($archivedCustomerJob);
    }

    /**
     * {@inheritDoc}
     */
    public function getArchivedCustomerJobs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArchivedCustomerJobs', []);

        return parent::getArchivedCustomerJobs();
    }

}
