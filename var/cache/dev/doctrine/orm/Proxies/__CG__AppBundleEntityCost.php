<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Cost extends \AppBundle\Entity\Cost implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'codeNumber', 'expenseType', 'description', 'budgetAmount', 'currency', 'enabled', 'notify', 'hidden', 'dateTimeCreated', 'purchaseItems', 'project', 'costClass'];
        }

        return ['__isInitialized__', 'id', 'codeNumber', 'expenseType', 'description', 'budgetAmount', 'currency', 'enabled', 'notify', 'hidden', 'dateTimeCreated', 'purchaseItems', 'project', 'costClass'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Cost $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function updatedTimestamps()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'updatedTimestamps', []);

        return parent::updatedTimestamps();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCodeNumber($codeNumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCodeNumber', [$codeNumber]);

        return parent::setCodeNumber($codeNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getCodeNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCodeNumber', []);

        return parent::getCodeNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setExpenseType($expenseType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpenseType', [$expenseType]);

        return parent::setExpenseType($expenseType);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpenseType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpenseType', []);

        return parent::getExpenseType();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setBudgetAmount($budgetAmount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBudgetAmount', [$budgetAmount]);

        return parent::setBudgetAmount($budgetAmount);
    }

    /**
     * {@inheritDoc}
     */
    public function getBudgetAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBudgetAmount', []);

        return parent::getBudgetAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function setCurrency($currency)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurrency', [$currency]);

        return parent::setCurrency($currency);
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrency()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurrency', []);

        return parent::getCurrency();
    }

    /**
     * {@inheritDoc}
     */
    public function setProject(\AppBundle\Entity\Project $project = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProject', [$project]);

        return parent::setProject($project);
    }

    /**
     * {@inheritDoc}
     */
    public function getProject()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProject', []);

        return parent::getProject();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateTimeCreated($dateTimeCreated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateTimeCreated', [$dateTimeCreated]);

        return parent::setDateTimeCreated($dateTimeCreated);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateTimeCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateTimeCreated', []);

        return parent::getDateTimeCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnabled($enabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnabled', [$enabled]);

        return parent::setEnabled($enabled);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnabled', []);

        return parent::getEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function isEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEnabled', []);

        return parent::isEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setHidden($hidden)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHidden', [$hidden]);

        return parent::setHidden($hidden);
    }

    /**
     * {@inheritDoc}
     */
    public function getHidden()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHidden', []);

        return parent::getHidden();
    }

    /**
     * {@inheritDoc}
     */
    public function addPurchaseItem(\AppBundle\Entity\PurchaseItem $purchaseItem)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPurchaseItem', [$purchaseItem]);

        return parent::addPurchaseItem($purchaseItem);
    }

    /**
     * {@inheritDoc}
     */
    public function removePurchaseItem(\AppBundle\Entity\PurchaseItem $purchaseItem)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePurchaseItem', [$purchaseItem]);

        return parent::removePurchaseItem($purchaseItem);
    }

    /**
     * {@inheritDoc}
     */
    public function getPurchaseItems()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPurchaseItems', []);

        return parent::getPurchaseItems();
    }

    /**
     * {@inheritDoc}
     */
    public function setNotify($notify)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNotify', [$notify]);

        return parent::setNotify($notify);
    }

    /**
     * {@inheritDoc}
     */
    public function getNotify()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotify', []);

        return parent::getNotify();
    }

    /**
     * {@inheritDoc}
     */
    public function setCostClass($costClass)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCostClass', [$costClass]);

        return parent::setCostClass($costClass);
    }

    /**
     * {@inheritDoc}
     */
    public function getCostClass()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCostClass', []);

        return parent::getCostClass();
    }

}
