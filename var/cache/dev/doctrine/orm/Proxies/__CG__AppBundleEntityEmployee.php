<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Employee extends \AppBundle\Entity\Employee implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'company', 'user', 'enabled', 'roles', 'dateTimeCreated', 'isDoneWizard', 'isImportedToQb', 'isDefaultAccountant', 'chargifyCustomerId', 'approvedProjects', 'purchases', 'approverPurchases', 'declinerPurchases', 'employeePaymentTypes'];
        }

        return ['__isInitialized__', 'id', 'company', 'user', 'enabled', 'roles', 'dateTimeCreated', 'isDoneWizard', 'isImportedToQb', 'isDefaultAccountant', 'chargifyCustomerId', 'approvedProjects', 'purchases', 'approverPurchases', 'declinerPurchases', 'employeePaymentTypes'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Employee $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function updatedTimestamps()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'updatedTimestamps', []);

        return parent::updatedTimestamps();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function addRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRole', [$role]);

        return parent::addRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRole', [$role]);

        return parent::removeRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function hasRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasRole', [$role]);

        return parent::hasRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function setDateTimeCreated($dateTimeCreated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateTimeCreated', [$dateTimeCreated]);

        return parent::setDateTimeCreated($dateTimeCreated);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateTimeCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateTimeCreated', []);

        return parent::getDateTimeCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setCompany(\AppBundle\Entity\Company $company = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompany', [$company]);

        return parent::setCompany($company);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompany()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompany', []);

        return parent::getCompany();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\AppBundle\Entity\User $user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setRoles($roles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoles', [$roles]);

        return parent::setRoles($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function addApprovedProject(\AppBundle\Entity\Project $approvedProject)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addApprovedProject', [$approvedProject]);

        return parent::addApprovedProject($approvedProject);
    }

    /**
     * {@inheritDoc}
     */
    public function removeApprovedProject(\AppBundle\Entity\Project $approvedProject)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeApprovedProject', [$approvedProject]);

        return parent::removeApprovedProject($approvedProject);
    }

    /**
     * {@inheritDoc}
     */
    public function getApprovedProjects()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApprovedProjects', []);

        return parent::getApprovedProjects();
    }

    /**
     * {@inheritDoc}
     */
    public function addPurchase(\AppBundle\Entity\Purchase $purchase)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPurchase', [$purchase]);

        return parent::addPurchase($purchase);
    }

    /**
     * {@inheritDoc}
     */
    public function removePurchase(\AppBundle\Entity\Purchase $purchase)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePurchase', [$purchase]);

        return parent::removePurchase($purchase);
    }

    /**
     * {@inheritDoc}
     */
    public function getPurchases()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPurchases', []);

        return parent::getPurchases();
    }

    /**
     * {@inheritDoc}
     */
    public function addEmployeePaymentType(\AppBundle\Entity\EmployeePaymentType $employeePaymentType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addEmployeePaymentType', [$employeePaymentType]);

        return parent::addEmployeePaymentType($employeePaymentType);
    }

    /**
     * {@inheritDoc}
     */
    public function removeEmployeePaymentType(\AppBundle\Entity\EmployeePaymentType $employeePaymentType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeEmployeePaymentType', [$employeePaymentType]);

        return parent::removeEmployeePaymentType($employeePaymentType);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmployeePaymentTypes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmployeePaymentTypes', []);

        return parent::getEmployeePaymentTypes();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnabled($enabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnabled', [$enabled]);

        return parent::setEnabled($enabled);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnabled', []);

        return parent::getEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsDoneWizard($isDoneWizard)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsDoneWizard', [$isDoneWizard]);

        return parent::setIsDoneWizard($isDoneWizard);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsDoneWizard()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsDoneWizard', []);

        return parent::getIsDoneWizard();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsDefaultAccountant($isDefaultAccountant)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsDefaultAccountant', [$isDefaultAccountant]);

        return parent::setIsDefaultAccountant($isDefaultAccountant);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsDefaultAccountant()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsDefaultAccountant', []);

        return parent::getIsDefaultAccountant();
    }

    /**
     * {@inheritDoc}
     */
    public function setChargifyCustomerId($chargifyCustomerId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChargifyCustomerId', [$chargifyCustomerId]);

        return parent::setChargifyCustomerId($chargifyCustomerId);
    }

    /**
     * {@inheritDoc}
     */
    public function getChargifyCustomerId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChargifyCustomerId', []);

        return parent::getChargifyCustomerId();
    }

    /**
     * {@inheritDoc}
     */
    public function addApproverPurchase(\AppBundle\Entity\Purchase $approverPurchase)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addApproverPurchase', [$approverPurchase]);

        return parent::addApproverPurchase($approverPurchase);
    }

    /**
     * {@inheritDoc}
     */
    public function removeApproverPurchase(\AppBundle\Entity\Purchase $approverPurchase)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeApproverPurchase', [$approverPurchase]);

        return parent::removeApproverPurchase($approverPurchase);
    }

    /**
     * {@inheritDoc}
     */
    public function getApproverPurchases()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApproverPurchases', []);

        return parent::getApproverPurchases();
    }

    /**
     * {@inheritDoc}
     */
    public function addDeclinerPurchase(\AppBundle\Entity\Purchase $declinerPurchase)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDeclinerPurchase', [$declinerPurchase]);

        return parent::addDeclinerPurchase($declinerPurchase);
    }

    /**
     * {@inheritDoc}
     */
    public function removeDeclinerPurchase(\AppBundle\Entity\Purchase $declinerPurchase)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeDeclinerPurchase', [$declinerPurchase]);

        return parent::removeDeclinerPurchase($declinerPurchase);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeclinerPurchases()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeclinerPurchases', []);

        return parent::getDeclinerPurchases();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsImportedToQb($isImportedToQb)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsImportedToQb', [$isImportedToQb]);

        return parent::setIsImportedToQb($isImportedToQb);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsImportedToQb()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsImportedToQb', []);

        return parent::getIsImportedToQb();
    }

}
